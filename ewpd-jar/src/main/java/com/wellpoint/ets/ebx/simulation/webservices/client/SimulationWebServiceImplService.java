//
// Generated By:JAX-WS RI IBM 2.1.6 in JDK 6 (JAXB RI IBM JAXB 2.1.10 in JDK 6)
//


package com.wellpoint.ets.ebx.simulation.webservices.client;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


@WebServiceClient(name = "SimulationWebServiceImplService", targetNamespace = "http://impl.webservices.simulation.ebx.ets.wellpoint.com/", wsdlLocation = "/wsdl/SimulationWebServiceImplService.wsdl")
public class SimulationWebServiceImplService
    extends Service
{

    //private final static URL SIMULATIONWEBSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(SimulationWebServiceImplService.class.getName());
    private final static String WSDL = "?WSDL";


    public SimulationWebServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SimulationWebServiceImplService() {
        super(getWebServiceURL(), new QName("http://impl.webservices.simulation.ebx.ets.wellpoint.com/", "SimulationWebServiceImplService"));
    }

    /**
     * 
     * @return
     *     returns SimulationWebServiceImplDelegate
     */
    @WebEndpoint(name = "SimulationWebServiceImplPort")
    public SimulationWebServiceImplDelegate getSimulationWebServiceImplPort() {
        //return super.getPort(new QName("http://impl.webservices.simulation.ebx.ets.wellpoint.com/", "SimulationWebServiceImplPort"), SimulationWebServiceImplDelegate.class);
        final SimulationWebServiceImplDelegate proxy =  super.getPort(new QName("http://impl.webservices.simulation.ebx.ets.wellpoint.com/", "SimulationWebServiceImplPort"), SimulationWebServiceImplDelegate.class);
        final String endPointURL = ResourceBundleManagerForWS.getURLForWebService("webservice.ebx.url");  // endURL = https://uat-eps.wellpoint.com/wsbebx/SimulationWebServiceImplService
        final BindingProvider bp = (BindingProvider) proxy;
        bp.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endPointURL);
        return proxy;

    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SimulationWebServiceImplDelegate
     */
    @WebEndpoint(name = "SimulationWebServiceImplPort")
    public SimulationWebServiceImplDelegate getSimulationWebServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.webservices.simulation.ebx.ets.wellpoint.com/", "SimulationWebServiceImplPort"), SimulationWebServiceImplDelegate.class, features);
    }
    
    private static URL getWebServiceURL(){
        String wsdlLocation = "/wsdl/SimulationWebServiceImplService.wsdl";
        URL url = null;
    	 try {
            url = SimulationWebServiceImplService.class.getResource(wsdlLocation);//new URL(eBXURL);
            if (url == null) throw new MalformedURLException(wsdlLocation + " does not exist in the module.");
        } catch (MalformedURLException e) {
            logger.log(Level.SEVERE,"Failed to create URL for the wsdl Location: '"+ wsdlLocation +"', retrying as a remote file from the location '" + ResourceBundleManagerForWS.getURLForWebService("webservice.ebx.url") + "'");
            logger.log(Level.SEVERE, e.getMessage());
        	wsdlLocation = ResourceBundleManagerForWS.getURLForWebService("webservice.ebx.url");
        	try{
        		url = new URL(wsdlLocation + WSDL);
        	}catch(MalformedURLException mue){
        		logger.log(Level.SEVERE,"Failed to create URL for the wsdl Location: '"+ wsdlLocation +"'");
                logger.log(Level.SEVERE, mue.getMessage());
        	}
        }
        return url;
    }

}